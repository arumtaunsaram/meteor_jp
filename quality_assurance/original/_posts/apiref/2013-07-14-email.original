The email package allows sending email from a Meteor app. To use it, add the package to your project with $ meteor add email.The server reads from the MAIL_URL environment variable to determine how to send mail. Currently, Meteor supports sending mail over SMTP; the MAIL_URL environment variable should be of the form smtp://USERNAME:PASSWORD@HOST:PORT/. For apps deployed with meteor deploy, MAIL_URL defaults to an account (provided by Mailgun) which allows apps to send up to 200 emails per day; you may override this default by assigning to process.env.MAIL_URL before your first call to Email.send.If MAIL_URL is not set (eg, when running your application locally), Email.send outputs the message to standard output instead.Email.send(options) Server

Send an email. Throws an Error on failure to contact mail server or if mail server returns an error.

Options
from String
RFC5322 "From:" address (required)

to String or Array of strings
RFC5322 "To:" address[es]

cc String or Array of strings
RFC5322 "Cc:" address[es]

bcc String or Array of strings
RFC5322 "Bcc:" address[es]

replyTo String or Array of strings
RFC5322 "Reply-To:" address[es]

subject String
RFC5322 "Subject:" line

text String
RFC5322 mail body (plain text)

html String
RFC5322 mail body (HTML)

headers Object
RFC5322 custom headers (dictionary)

You must provide the from option and at least one of to, cc, and bcc; all other options are optional.Email.send only works on the server. Here is an example of how a client could use a server method call to send an email. (In an actual application, you'd need to be careful to limit the emails that a client could send, to prevent your server from being used as a relay by spammers.)// In your server code: define a method that the client can call
Meteor.methods({
  sendEmail: function (to, from, subject, text) {
    check([to, from, subject, text], [String]);

    // Let other method calls from the same client start running,
    // without waiting for the email sending to complete.
    this.unblock();

    Email.send({
      to: to,
      from: from,
      subject: subject,
      text: text
    });
  }
});

// In your client code: asynchronously send an email
Meteor.call('sendEmail',
            'alice@example.com',
            'bob@example.com',
            'Hello from Meteor!',
            'This is a test of Email.send.');

